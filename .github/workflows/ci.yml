---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TF_DOCS_CONFIG_FILE: .terraform-docs.yml
      TF_DOCS_EXTRA_ARGS: --output-check
      TF_DOCS_OUTPUT_FILE: README.md
      TF_DOCS_WORKING_DIR: .
      TF_VERSION: v1.3.1
    steps:
      - name: Check commit message
        uses: gsactions/commit-message-checker@v1.0.1
        with:
          pattern: '^(((feat|fix|docs|style|refactor|perf|test|build|ci|chore|license|revert|bump|make|localize|skip\ ci)(\([a-z ]+\)|\([A-Z]{1,5}[-]{1}[0-9]{1,6}\))?))(!)?[\:][\ ](([a-zA-Z]{1,100}.{0,255}))$'
          flags: 'gm'
          error: |
            Your commit message format is invalid, it must include a valid prefix: feat, fix, docs, style, 
            refactor, perf, test, build, ci, chore, license, revert, bump, make, localize, skip ci or a 
            Jira ticket format (e.g 'fix: my commit message', 'fix(scope): my commit message' or 'ABC-123: my commit message').
            If you are introducing a breaking change, you must append an exclamation mark to the prefix
            right before the colon or specify a footer with the format 'BREAKING CHANGE: summary'.

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Check files
        uses: andstor/file-existence-action@v1
        with:
          files: >
            .gitconfig,
            .githooks/commit-msg,
            .githooks/pre-commit,
            .github/pull_request_template.md,
            .github/workflows/ci.yml,
            .gitignore,
            .terraform-docs.yml,
            Makefile,
            README.md,
            examples/docs/main.tf,
            main.tf,
            outputs.tf,
            variables.tf

      - name: Terraform fmt
        id: fmt
        run: make fmt

      - name: Terraform init
        id: init
        run: make init

      - name: Terraform validate
        id: validate
        run: make validate

      - name: Terraform docs
        uses: terraform-docs/gh-actions@v1.0.0
        id: docs
        with:
          args: ${{ env.TF_DOCS_EXTRA_ARGS }}
          config-file: ${{ env.TF_DOCS_CONFIG_FILE }}
          output-file: ${{ env.TF_DOCS_OUTPUT_FILE }}
          working-dir: ${{ env.TF_DOCS_WORKING_DIR }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.event_name == 'push' }}
    steps:
      - name: Create tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          tag_prefix: ''

      - name: Create initial release
        uses: softprops/action-gh-release@v0.1.14
        if: ${{ steps.create_tag.outputs.previous_version == '0.0.0' }}
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          name: Initial release
          tag_name: "0.1.0"
          body: ${{ steps.create_tag.outputs.changelog }}

      - name: Create release
        uses: softprops/action-gh-release@v0.1.14
        if: ${{ steps.create_tag.outputs.new_tag }}
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          name: Release ${{ steps.create_tag.outputs.new_tag }}
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
